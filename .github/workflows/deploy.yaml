name: Frontend CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set Up Node.js with Caching
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  
          cache: 'npm'

      # Install Dependencies
      - name: Install dependencies
        run: npm ci

      # Setup ESLint config if not exists
      - name: Setup ESLint
        run: |
          if [ ! -f .eslintrc.json ]; then
            echo '{"extends": ["next/core-web-vitals"]}' > .eslintrc.json
          fi

      # Linting & Type Checking
      - name: Run Linter
        run: npm run lint -- --quiet

      - name: Type Check
        run: npm run typecheck

      # Build Next.js App
      - name: Build Next.js App
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL || 'http://localhost:3000' }}
          NEXT_PUBLIC_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_AUTH_DOMAIN || 'http://localhost:3000/auth' }}

      # Cache Build Files for Faster Deployments
      - name: Cache Build Files
        uses: actions/cache@v3
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Deploy to Vercel (Uncomment when ready)
      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v20
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.ORG_ID }}
      #     vercel-project-id: ${{ secrets.PROJECT_ID }}
      #     working-directory: ./
      #     vercel-args: '--prod'
